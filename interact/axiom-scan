#!/bin/bash

AXIOM_PATH="$HOME/.axiom"
source "$AXIOM_PATH/interact/includes/vars.sh"

fleet=""
file=""
ports=""
start_dir=$(pwd)
outfile=""
module="masscan"

for var in "$@"; do
	if [[ $var =~ "--ports" ]]; then
		ports="$(echo "$var" | sed 's/=/ /g' | awk '{ print $2 }')"
		echo -e "${BWhite}Using ports '$ports'${Color_Off}"
	fi
	if [[ "$var" =~ "-f" ]]; then
		file="$(echo "$var" | sed 's/=/ /g' | awk '{ print $2 }')"
		echo -e "${BWhite}Reading targets from '$file'${Color_Off}"
	fi
	if [[ "$var" =~ "-n" ]]; then
		fleet="$(echo "$var" | sed 's/=/ /g' | awk '{ print $2 }')"
		echo -e "${BWhite}Scanning using fleet '$fleet'${Color_Off}"
	fi
	if [[ "$var" =~ "-o" ]]; then
		outfile="$(echo "$var" | sed 's/=/ /g' | awk '{ print $2 }')"
		echo -e "${BWhite}Outputting to '$outfile'...${Color_Off}"
	fi
	if [[ "$var" =~ "-m" ]]; then
		module="$(echo "$var" | sed 's/=/ /g' | awk '{ print $2 }')"
		echo -e "${BWhite}Setting module to '$module'...${Color_Off}"
	fi

done


if [ -z $fleet ]
then
	echo "Please specify a fleet with -n=fleetname..."
	exit
fi

if [ -z $file ]
then
	echo "Please specify a target list with -f=filename..."
	exit
fi

if [ -z $ports ]
then
	echo "Please specify ports with --ports=80..."
	exit
fi



total=$(axiom-ls $fleet | wc -l | awk '{ print $1 }')

rm -rf /tmp/axiom/.tmp 2>&1 >> /dev/null
rm /tmp/axiom/sshconfig.txt 2>&1 >> /dev/null
droplets=$(doctl compute droplet list -o json)

mkdir -p /tmp/axiom/.tmp/

# GENERATING SSH  CONFIG
############################################################################################

for name in $(echo "$droplets" | jq -r '.[].name')
do
	if [[ $name =~ $fleet ]]
	then
		ip=$(echo "$droplets" | jq -r ".[] | select(.name==\"$name\") | .networks.v4[].ip_address")
		echo -e "Host $name\n\tHostName $ip\n\tUser op\n\tPort 2266\n" >> /tmp/axiom/sshconfig.txt
	fi
done


############################################################################################
### SPLIT 
############################################################################################
scope="$file"

echo "Splitting $scope into $total pieces"

mkdir -p /tmp/axiom/.tmp/
cp $scope /tmp/axiom/.tmp/
lines=$(wc -l $scope | awk '{ print $1 }')
lines_per_file=$(bc <<< "scale=2; $lines / $total" | awk '{print int($1+0.5)}')
cd /tmp/axiom/.tmp/
split -l $lines_per_file $scope

a=1

for f in $(bash -c "ls | grep -v '$scope' | grep x")
do
    mv $f $a.txt
    a=$((a+1))
done

rm $scope

############################################################################################

for line in $(axiom-ls $fleet)
do 
	i=$(echo $line | cut -d ":" -f 1)
	name=$(echo $line | cut -d ":" -f 2)

	echo "$name" >> /tmp/axiom/hosts.txt
	mv /tmp/axiom/.tmp/$i.txt /tmp/axiom/.tmp/$name.txt
done

mkdir -p /tmp/axiom/output
interlace -tL /tmp/axiom/hosts.txt -threads $total -c "$AXIOM_PATH/interact/modules/$module _target_ $ports" -vv

rm -rf /tmp/axiom/.tmp
rm /tmp/axiom/hosts.txt
time=$(date +%s)
port_str=$(echo $ports | sed 's/,/-/g')

cd $start_dir

if [ -z $outfile ]
then
	cat /tmp/axiom/output/$fleet*.txt | sort -u > $fleet-$port_str-$time.txt
	ls -lh $fleet-$port_str-$time.txt
	wc -l $fleet-$port_str-$time.txt
else
	pwd
	cat /tmp/axiom/output/$fleet*.txt | sort -u > $outfile
	wc -l $outfile
	ls -lh $outfile
fi

