#!/bin/bash

AXIOM_PATH="$HOME/.axiom"
source "$AXIOM_PATH/interact/includes/vars.sh"
source "$AXIOM_PATH/interact/includes/do-functions.sh"

# Host Options
targets_infile=""
selected_module="masscan"
query="$1"
outfile="$(echo "$query" | sed 's/\*//g')-$(date +%s).txt"
# Set user input
for var in "$@"
do
	if [[ "$var" =~ "-p" ]]
	then
		ports=$(echo $var | sed 's/-p//g')
	elif [[ "$var" =~  "-iL=" ]]
	then
		targets_infile=$(echo "$var" | cut -d "=" -f2)
	elif  [[ "$var" =~ "-m=" ]]
	then
		s=$(echo "$var" | cut -d "=" -f2)
		if [ -f "$AXIOM_PATH/interact/modules/$s.json" ]
		then
			selected_module="$s"
		else
			echo -e "${BRed}Module: '$s' does not exist, valid modules are:${Color_Off}"
			echo -e -n "${Blue}"
			ls "$AXIOM_PATH/interact/modules/" | sed 's/\.json//g'
			echo -e -n "${Color_Off}"
			exit
		fi
	elif  [[ "$var" =~ "-o=" ]]
	then
		outfile=$(echo "$var" | cut -d "=" -f2)
	else
		if [[ "$var" !=  "$1" ]]	
		then
			args="$args $var"
		fi
	fi
done

if [[ ! -f $targets_infile ]]
then
	echo "File doesn't exist."
	exit
fi

#Load from the module
module="$AXIOM_PATH/interact/modules/$selected_module.json"
cmd=$(jq -r '.command'  $module)
box_infile=$(jq -r '.box_infile'  $module)
box_outfile=$(jq -r '.box_outfile'  $module)
ports=$(jq -r '.default_ports'  $module)
args=$(jq -r '.default_args'  $module)


instances=$(query_instances "$1")

if [ "$instances" ]
then
	src_prefix=$(lsplit $targets_infile "$instances")
	axiom-scp "$src_prefix/\$name.txt" "$query:$box_infile"
	cmd_rendered=$(echo $cmd | sed "s/\$ports/$ports/g" | sed "s/\$args/$args/g" | sed "s/\$infile/$box_infile/g"  | sed "s/\$outfile/$box_outfile/g")
	echo  $instances | tr ' ' '\n' > $src_prefix/hosts.txt
	
	total=$(wc -l $src_prefix/hosts.txt | awk '{ print $1 }')
	interlace -tL $src_prefix/hosts.txt -threads $total -c "axiom-exec '$cmd_rendered' '_target_' -q" 
	axiom-scp "$query:$box_outfile" "$src_prefix/\$name-out.txt"
	cat $src_prefix/$query-out.txt | sort -u > $outfile
	echo "File saved to $outfile."
else
	echo "No instances in that fleet, use 'axiom-fleet -i=7 -t=2' to spin up a fleet"
fi


