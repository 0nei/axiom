#!/bin/bash

names=("allen""stok" "pry" "chell" "fire" "bango" "cage" "xpn" "luke" "haddix" "omnom" "jobs" "ritchie" "knox" "bleeder" "batman" "blink" "ghost" "metcalf" "hickey" "fightnerd" "pancakes" "kennedy" "jarvis" "unicorn" "medin" "mog" "thl" "cuthbert" "fox" "hunt" "austin" "babbage" "banzai" "bardeen" "bartik" "bassi" "beaver" "bell" "benz" "black""blackwell""booth" "borg" "bose" "boyd" "brown" "buck" "cannon" "carson" "carter" "cerf"  "cohen" "clarke" "colden" "cori" "cray" "curie" "darwin" "davinci" "diffie" "dirac" "edison" "einstein" "elion" "ellis""euclid" "euler" "faraday" "fermat" "fermi" "franklin" "gagarin" "galileo" "gates" "gauss" "goldberg" "goldstine" "goodall" "gould" "greider" "haibt" "hamilton" "haslett" "hawking" "hellman" "heisenberg" "hermann" "herschel" "hertz" "hodgkin" "hoover" "hopper" "hugle" "hypatia" "jackson" "jang" "jennings" "jepsen" "johnson" "joliot" "jones" "kalam" "kare" "keller" "kepler" "kilby" "kirch" "knuth" "lalande" "lamar" "lamport" "leakey" "lederberg" "lehmann" "lewin" "liskov" "lovelace" "margulis" "matsumoto" "maxwell" "mayer" "mccarthy" "mclaren" "mclean" "mcnulty" "mendel" "merkle" "moore" "morse" "murdock" "moser" "napier" "nash" "neumann" "newton" "nightingale" "nobel" "noyce" "panini" "pare" "pascal" "payne" "perlman" "pike" "ptolemy" "raman" "ride" "ritchie" "rhodes" "robinson" "rubin" "saha" "sammet""satoshi" "shamir" "shannon" "shaw" "shirley""snyder" "solomon" "spence" "stonebraker" "sutherland" "swanson" "swartz" "swirles" "tesla""thompson" "torvalds" "tu" "turing" "volhard" "villani" "wescoff" "wilbur" "wiles" "williams""wilson" "wing" "wozniak" "wright" "wu")
 
# Reset
Color_Off='\033[0m'       # Text Reset

# Regular Colors
export Black='\033[0;30m'        # Black
export Red='\033[0;31m'          # Red
export Green='\033[0;32m'        # Green
export Yellow='\033[0;33m'       # Yellow
export Blue='\033[0;34m'         # Blue
export Purple='\033[0;35m'       # Purple
export Cyan='\033[0;36m'         # Cyan
export White='\033[0;37m'        # White

# Bold
export BBlack='\033[1;30m'       # Black
export BRed='\033[1;31m'         # Red
export BGreen='\033[1;32m'       # Green
export BYellow='\033[1;33m'      # Yellow
export BBlue='\033[1;34m'        # Blue
export BPurple='\033[1;35m'      # Purple
export BCyan='\033[1;36m'        # Cyan
export BWhite='\033[1;37m'       # White

gen_name="${names[$RANDOM % ${#names[@]} ]}$((10 + RANDOM % 20))"
region="$(jq -r '.region' ~/.axiom/axiom.json)"
size="$(jq -r '.default_size' ~/.axiom/axiom.json)"
#domain=$(cat ~/.axiom.json | jq -r '.domain')

box_name=""
connect_shell=false
restore=false
deploy=false
expire=false
default_expiry=525600000
quiet=false

if [ -z "$1" ] || [[ $1 =~ "shell" ]] || [[ $1 =~ "restore" ]] || [[ $1 =~ "deploy" ]] || [[ $1 =~ "size" ]] || [[ $1 =~ "expire" ]] || [[ $1 =~ "quiet" ]];
then
    name="$gen_name"
else
    name="$1"
fi

for var in "$@"
do
    if [ "$var" == "--shell" ]
    then
        connect_shell=true
    fi
    if [ "$var" == "--quiet" ]
    then
        quiet=true
    fi

    if [[ $var =~ "--restore" ]]
    then
        restore="$(echo "$var" | sed 's/=/ /g' | awk '{ print $2 }')"
        echo -e "${BWhite}Using restore backup '$restore'${Color_Off}"
    fi
    if [[ "$var" =~ "--deploy" ]]
    then
        deploy="$(echo "$var" | sed 's/=/ /g' | awk '{ print $2 }')"
        echo -e "${BWhite}Deploying '$deploy' after init${Color_Off}"
    fi
    if [[ "$var" =~ "--size" ]]
	then
		size="$(echo "$var" | sed 's/=/ /g' | awk '{ print $2 }')"
		echo -e "${BWhite}Manually setting size to '$size'${Color_Off}"
	fi
	if [[ "$var" =~ "--expire" ]]
	then
		expire="$(echo "$var" | sed 's/=/ /g' | awk '{ print $2 }')"
        default_expiry=$expire
		echo -e "${BWhite}Setting expiry to $expire minutes...${Color_Off}"
	fi
done

notify-send "Axiom Info" "Initializing '$name'..."
echo -e "${BWhite}Initializing '$name'"

image_name="axiom-$region"
image_id="$(doctl compute image list | grep "$image_name" | tail -n 1 | awk '{ print $1 }')"

cat ~/.axiom/configs/init.sh | sed "s/CHANGEME/$default_expiry/g" > /tmp/$name.sh
chmod +x /tmp/$name.sh
resp=$(doctl compute droplet create "$name" --image "$image_id" --size "$size" --region "$region" --user-data-file /tmp/$name.sh)

if [ "$quiet" != "true" ]
then
    secs=$((60))
    while [ $secs -gt 30 ]; do
        echo -ne ">> T-Minus $secs to stage-1 Lift Off!\033[0K\r"
        sleep 1
        : $((secs--))
    done
else
    sleep 60
fi
# Roughly 30 seconds before the public IP is init'd
ip="$(doctl compute droplet list | grep "$name" | awk '{ print $3 }')"
#dns=$(doctl compute domain records create $domain --record-type A --record-name $name --record-data $ip)
if [ "$quiet" != "true" ]
then
    secs=$((30))
    while [ $secs -gt 0 ]; do
	    echo -ne ">> T-Minus $secs to full initialization...\033[0K\r"
	    sleep 1
	    : $((secs--))
    done
else
    sleep 30
fi

echo "{\"instance\":\"$name\"}" | jq > ~/.axiom/profile.json

notify-send "Axiom Info" "$name successfully initialized at $ip!"
echo -e "${BWhite}Initialized! Instance accessible at '${BGreen}$ip${BWhite}'!"

if [ "$quiet" != "true" ]
then
    echo -e "To connect, run '${BGreen}axiom-ssh $name${Green}'${Color_Off}"
fi

if [ "$restore" != false ]
then
	echo -e "${BWhite}Waiting 65 seconds before restore...${Color_Off}"
	sleep 65
    ~/.axiom/interact/axiom-restore "$restore" "$name"
fi

if [ "$deploy" != false ]
then
	echo -e "${BWhite}Waiting 65 seconds before deploy... ${Color_Off}"
	sleep 65
	~/.axiom/interact/axiom-deploy "$deploy"
fi

$HOME/.axiom/interact/header.sh
