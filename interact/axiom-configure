#!/bin/bash

echo "Hello! Welcome to Axiom configuration :)"
echo "To begin, I will ask you a few questions"
echo "Press enter to continue"
read

echo "Now to deps! Please wait :)"
BASEOS="`uname`"
case $BASEOS in
  'Linux')
    BASEOS='Linux'
    ;;
  'FreeBSD')
    BASEOS='FreeBSD'
    alias ls='ls -G'
    ;;
  'WindowsNT')
    BASEOS='Windows'
    ;;
  'Darwin') 
    BASEOS='Mac'
    ;;
  'SunOS')
    BASEOS='Solaris'
    ;;
  'AIX') ;;
  *) ;;
esac

if [ $BASEOS == "Linux" ]
then
    OS=$(lsb_release -i | awk '{ print $3 }')
    if [ $OS == "Arch" ]
    then
        echo "Congrats, you run arch..."
        echo "Ok so you need doctl - so get that from the AUR :) You're smart! You installed arch!"
        sudo pacman -S fzf packer jq
    elif [ $OS == "Ubuntu" ]
    then
        sudo wget -O /usr/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 && sudo chmod +x /usr/bin/jq
        wget -O /tmp/packer.zip https://releases.hashicorp.com/packer/1.5.6/packer_1.5.6_linux_amd64.zip && cd /tmp/ && unzip packer.zip && sudo mv packer /usr/bin/
        sudo apt-get update && sudo apt-get install fzf git
        snap install doctl
    fi
fi

#install go
if [[ -z "$GOPATH" ]];then
echo "It looks like go is not installed, would you like to install it now"
PS3="Please select an option : "
choices=("yes" "no")
select choice in "${choices[@]}"; do
        case $choice in
                yes)

					echo "Installing Golang"
					wget https://dl.google.com/go/go1.13.4.linux-amd64.tar.gz
					sudo tar -xvf go1.13.4.linux-amd64.tar.gz
					sudo mv go /usr/local
					export GOROOT=/usr/local/go
					export GOPATH=$HOME/go
					export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
					echo 'export GOROOT=/usr/local/go' >> ~/.bash_profile
					echo 'export GOPATH=$HOME/go'	>> ~/.bash_profile			
					echo 'export PATH=$GOPATH/bin:$GOROOT/bin:$PATH' >> ~/.bash_profile	
					source ~/.bash_profile
					sleep 1
					break
					;;
				no)
					echo "Please install go and rerun this script"
					echo "Aborting installation..."
					exit 1
					;;
	esac	
done
fi

if [ $BASEOS == "Mac" ]
then
    echo "Installing packer now..."
    brew install doctl
    brew install jq
    mkdir -p $(go env GOPATH)/src/github.com/hashicorp && cd $_
    git clone https://github.com/hashicorp/packer.git
    cd packer
    make dev
fi

if [ ! -d ~/.axiom ]
then
    git clone https://github.com/pry0cc/axiom ~/.axiom
else
    cd ~/.axiom && git pull
fi

echo "What is your DigitalOcean API key? "
echo -n "Key >> "
read do_key
echo "Setting up doctl!..."
doctl auth init -t $do_key
#echo "What would you like to pick for region? nyc3, sfo2 <-- this one is best"
region="sfo2"
#echo -n "Region >> "
#read region
#echo "What domain do you use?"
#echo -n "Domain >> "
#read domain
domain=""
#echo "What is your Hunter key? (optional)"
#echo -n "Key >> "
hunter_key=""
size="s-1vcpu-1gb"

if [ -f ~/.ssh/id_rsa.pub ]
then
    echo "Detected SSH public key, would you like me to install this for your axiom setup? y/n "
    read ans
    if [ $ans == "y" ]
    then
        cat ~/.ssh/id_rsa.pub > ~/.axiom/configs/authorized_keys
    fi
else
    echo "No SSH public key detected, would you like to generate a fresh pair? y/n "
    read ans
    if [ $ans == "y" ]
    then
        ssh-keygen
        cat ~/.ssh/id_rsa.pub > ~/.axiom/configs/authorized_keys
    fi
fi

if [ "$SHELL" == "/usr/local/bin/zsh" ]; then
    echo "You're running ZSH! Installing Axiom to \$PATH..."
    echo "export PATH=\"\$PATH:\$HOME/.axiom/interact\"" >> ~/.zshrc
elif [ "$SHELL" == "/bin/bash" ]; then
    echo "You're running Bash! Installing Axiom to \$PATH..."
    echo "export PATH=\"\$PATH:\$HOME/.axiom/interact\"" >> ~/.zshrc
else
    echo "I don't have a predefined setup for your shell!"
    echo "Please add ~/.axiom/interact to your \$PATH!"
    echo "(export PATH=\"\$PATH:$HOME/.axiom/interact\")"
fi 

echo "{\"do_key\":\"$do_key\", \"region\":\"$region\", \"domain\":\"$domain\", \"default_size\":\"$size\", \"hunter_key\":\"$hunter_key\"}" | jq > ~/.axiom/axiom.json

echo "Beginning first packer build..."
cd ~/.axiom/
packer build -var-file ~/.axiom/axiom.json ~/.axiom/packer.json
cd
